/* There remains some margin and padding by default. So before starting it's always better to start by initializing their value to 0. The properties below do this task. There is another property "box-sizing" you may learn later. But for better understanding you can visit https://www.w3schools.com/css/css3_box-sizing.asp. Read the page, try to understand the examples. If you find any problem let me know */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* While creating we may follow a single font scheme. That's why it's better to set font properties for the complete page. Then we wont have to frequently change this properties. */

body {
  font-family: "Raleway", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
}

/* You may notice some sections of the page are situated leaving some space both in the left and right. See the first section (hero section) and the 5th section. It acquires the complete width, the complete screen width. But if you notice the 2nd, 3rd, 4th, 6th, 7th section, all these sections leave some space both in left and right. Actually for these sections the widly used width is 1140px. That's why I'm setting this property. and making the class name 'container'. So remember, when you see a section leaving space in both left and right, you have to put that section in a container.  In this section you will find a property 'margin: 0 auto'. Actually this property brings the container in the center. Give it a try. Remove the 'margin: 0 auto' property and reload the page. You will see the container is no more in the  center. It has been attached to the left side of the screen.*/
.container {
  width: 1140px;
  margin: 0 auto;
}

/* As you know every section have to acquire the complete width of the screen. If we leave some space (width) after a section, then the next section can come next (right) to it. That's why we will set 'width:100%' to every section. When acquires 100% of width next section can't come beside (right). That has to go below. */
.section {
  width: 100%;
  float: left;
}

/* Now comes the hot topic, the boxes. Look carefully all the boxes look alike. So why create tons of classes for the boxes that looks same? We will create a class that will has all the properties. First the width. A question may arise, there are 3 boxes in a row, then why the width is 32.66%? It should be 33.33%. Right? But actually it's not like that. Look carefully we have to give some space among the box. After the first box there are some spaces, after the 2nd box there are some spaces. If you give every box 33.33% width then how will you give the spaces (33.33 *3 = 99.99; no space left for 'space'). So we have set the width to 32.66%. Three box acquire total 32.66*3= 97.98%(arond 98%). Now got some percentage for space? Yes 2% left for the space among the boxes. We will give 'margin-right: 1%' to give space margin to right. But what? 3 boxes each 1%=3%? No the 3rd box will get not 'margin-right=1%'. Look the next class  the 3rd box has 'margin-right: 0%. 'float: left' property brings the boxes one after another. Ooh forgot something. Look the template. There is some space below the box. That's why 'margin-bottom:1%' . Then see all the texts are aligned in the center. That's why 'text-align: center' */

.box {
  width: 32.66%;
  float: left;
  margin-right: 1%;
  margin-bottom: 1%;
  padding: 45px 40px;
  background-color: #fffbfb;
  border: 1px solid rgba(141, 141, 141, 0.171);
  text-align: center;
}
.box:nth-child(3) {
  margin-right: 0%;
}
.box:nth-child(6) {
  margin-right: 0%;
}

.icon-image {
  display: inline-block;
  height: 62px;
  width: 62px;
}

h2.box-heading {
  font-family: "Roboto Slab", serif;
  font-weight: bold;
  margin-bottom: 6px;
}
p.box-paragraph {
  line-height: 1.5;
  margin-bottom: 22px;
}
a.box-button {
  padding: 8px 28px;
  color: white;
  background-color: #0aeaea;
  text-decoration: none;
  box-shadow: 1px 1px 2px #888888;
}

/* Don't care about this. As I have created only one section, it's wired to see this one attached to the top of the screen. That's why gave some margin above */
.mar-top {
  margin-top: 30px;
}
